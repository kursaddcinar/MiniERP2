@model StockCardDto?

@{
    ViewData["Title"] = "Stok Kartı Detayı";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (Model == null)
{
    <div class="alert alert-warning">
        <i class="fas fa-exclamation-triangle"></i>
        Stok kartı bulunamadı.
    </div>
    return;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="page-title-box">
                <h4 class="page-title">
                    <i class="fas fa-boxes"></i>
                    Stok Kartı Detayı
                </h4>
                <div class="page-title-right">
                    <ol class="breadcrumb m-0">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Dashboard")">Ana Sayfa</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Index", "Stock")">Stok Yönetimi</a></li>
                        <li class="breadcrumb-item active">Detay</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    @if (Model != null)
    {
        <div class="row">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <div class="row align-items-center">
                            <div class="col">
                                <h5 class="card-title mb-0">
                                    @Model!.ProductCode - @Model!.ProductName
                                </h5>
                            </div>
                            <div class="col-auto">
                                <span class="badge @(Model.CurrentStock > Model.MinimumStock ? "bg-success" : Model.CurrentStock > 0 ? "bg-warning" : "bg-danger")">
                                    @Model!.CurrentStock.ToString("N2") @Model!.UnitName
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="card-body">
                        <!-- Ürün Bilgileri -->
                        <div class="row mb-4">
                            <div class="col-md-6">
                                <h6 class="text-primary">Ürün Bilgileri</h6>
                                <table class="table table-borderless table-sm">
                                    <tr>
                                        <th width="120">Ürün Kodu:</th>
                                        <td><strong>@Model!.ProductCode</strong></td>
                                    </tr>
                                    <tr>
                                        <th>Ürün Adı:</th>
                                        <td><strong>@Model!.ProductName</strong></td>
                                    </tr>
                                    <tr>
                                        <th>Kategori:</th>
                                        <td>@Model!.CategoryName</td>
                                    </tr>
                                    <tr>
                                        <th>Birim:</th>
                                        <td>@Model!.UnitName</td>
                                    </tr>
                                </table>
                            </div>
                            <div class="col-md-6">
                                <h6 class="text-primary">Depo Bilgileri</h6>
                                <table class="table table-borderless table-sm">
                                    <tr>
                                        <th width="120">Depo Kodu:</th>
                                        <td><strong>@Model!.WarehouseCode</strong></td>
                                    </tr>
                                    <tr>
                                        <th>Depo Adı:</th>
                                        <td><strong>@Model!.WarehouseName</strong></td>
                                    </tr>
                                    <tr>
                                        <th>Lokasyon:</th>
                                        <td>@Model!.Location</td>
                                    </tr>
                                    <tr>
                                        <th>Güncelleme:</th>
                                        <td>@Model!.LastUpdateDate.ToString("dd.MM.yyyy HH:mm")</td>
                                    </tr>
                                </table>
                            </div>
                        </div>

                        <!-- Stok Durumu -->
                        <div class="row mb-4">
                            <div class="col-12">
                                <h6 class="text-primary">Stok Durumu</h6>
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <h5 class="text-success">@Model!.CurrentStock.ToString("N2")</h5>
                                                <p class="text-muted mb-0">Mevcut Stok</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <h5 class="text-warning">@Model!.ReservedStock.ToString("N2")</h5>
                                                <p class="text-muted mb-0">Rezerve Stok</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <h5 class="text-info">@Model!.AvailableStock.ToString("N2")</h5>
                                                <p class="text-muted mb-0">Kullanılabilir Stok</p>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="card bg-light">
                                            <div class="card-body text-center">
                                                <h5 class="text-danger">@Model!.MinimumStock.ToString("N2")</h5>
                                                <p class="text-muted mb-0">Minimum Stok</p>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Stok Hareketleri -->
                        <div class="row">
                            <div class="col-12">
                                <h6 class="text-primary">Son Stok Hareketleri</h6>
                                <div class="table-responsive">
                                    <table class="table table-striped">
                                        <thead class="table-dark">
                                            <tr>
                                                <th>Tarih</th>
                                                <th>Hareket Türü</th>
                                                <th>Belge No</th>
                                                <th class="text-center">Miktar</th>
                                                <th class="text-center">Birim Fiyat</th>
                                                <th class="text-center">Kalan Stok</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Model.RecentTransactions != null && Model.RecentTransactions.Any())
                                            {
                                                @foreach (var transaction in Model.RecentTransactions)
                                                {
                                                    <tr>
                                                        <td>@transaction.TransactionDate.ToString("dd.MM.yyyy")</td>
                                                        <td>
                                                            <span class="badge @(transaction.TransactionType == "IN" ? "bg-success" : "bg-danger")">
                                                                @transaction.TransactionType
                                                            </span>
                                                        </td>
                                                        <td>@transaction.DocumentNumber</td>
                                                        <td class="text-center">
                                                            @transaction.Quantity.ToString("N2")
                                                        </td>
                                                        <td class="text-center">
                                                            @transaction.UnitPrice.ToString("C")
                                                        </td>
                                                        <td class="text-center">
                                                            @transaction.RemainingStock.ToString("N2")
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                            else
                                            {
                                                <tr>
                                                    <td colspan="6" class="text-center text-muted">Henüz stok hareketi bulunmamaktadır.</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>

                        <!-- Aksiyon Butonları -->
                        <div class="row mt-4">
                            <div class="col-12">
                                <div class="d-flex justify-content-between align-items-center">
                                    <a href="@Url.Action("Index")" class="btn btn-secondary">
                                        <i class="fas fa-arrow-left"></i> Geri
                                    </a>
                                    <div>
                                        <button type="button" class="btn btn-success me-2" onclick="showStockInModal()">
                                            <i class="fas fa-plus"></i> Stok Girişi
                                        </button>
                                        <button type="button" class="btn btn-danger me-2" onclick="showStockOutModal()">
                                            <i class="fas fa-minus"></i> Stok Çıkışı
                                        </button>
                                        <a href="@Url.Action("Edit", new { id = Model.StockCardID })" class="btn btn-warning me-2">
                                            <i class="fas fa-edit"></i> Düzenle
                                        </a>
                                        <button type="button" class="btn btn-info" onclick="showTransactionsModal()">
                                            <i class="fas fa-history"></i> Tüm Hareketler
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Stok Durumu Grafikleri -->
            <div class="col-md-4">
                <div class="card">
                    <div class="card-header">
                        <h6 class="card-title">Stok Durumu Grafiği</h6>
                    </div>
                    <div class="card-body">
                        <canvas id="stockChart" width="400" height="200"></canvas>
                    </div>
                </div>

                <!-- Stok Uyarıları -->
                <div class="card mt-3">
                    <div class="card-header">
                        <h6 class="card-title">Stok Uyarıları</h6>
                    </div>
                    <div class="card-body">
                        @if (Model.CurrentStock <= 0)
                        {
                            <div class="alert alert-danger">
                                <i class="fas fa-exclamation-triangle"></i>
                                <strong>Stok Tükendi!</strong> Bu ürün için stok bulunmuyor.
                            </div>
                        }
                        else if (Model.CurrentStock <= Model.MinimumStock)
                        {
                            <div class="alert alert-warning">
                                <i class="fas fa-exclamation-triangle"></i>
                                <strong>Kritik Stok!</strong> Stok minimum seviyenin altında.
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-success">
                                <i class="fas fa-check-circle"></i>
                                <strong>Stok Durumu Normal</strong>
                            </div>
                        }

                        @if (Model.ReservedStock > 0)
                        {
                            <div class="alert alert-info">
                                <i class="fas fa-info-circle"></i>
                                <strong>Rezerve Stok:</strong> @Model!.ReservedStock.ToString("N2") @Model!.UnitName rezerve edilmiş.
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="row">
            <div class="col-12">
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle"></i>
                    Stok kartı bulunamadı.
                </div>
            </div>
        </div>
    }
</div>

<!-- Modal placeholders -->
<div id="stockModals">
    <!-- Stok Giriş Modal -->
    <div class="modal fade" id="stockInModal" tabindex="-1" aria-labelledby="stockInModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="stockInModalLabel">Stok Girişi</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="stockInForm">
                        <div class="mb-3">
                            <label for="stockInQuantity" class="form-label">Miktar</label>
                            <input type="number" class="form-control" id="stockInQuantity" step="0.01" required>
                        </div>
                        <div class="mb-3">
                            <label for="stockInPrice" class="form-label">Birim Fiyat</label>
                            <input type="number" class="form-control" id="stockInPrice" step="0.01">
                        </div>
                        <div class="mb-3">
                            <label for="stockInDocument" class="form-label">Belge No</label>
                            <input type="text" class="form-control" id="stockInDocument">
                        </div>
                        <div class="mb-3">
                            <label for="stockInNotes" class="form-label">Açıklama</label>
                            <textarea class="form-control" id="stockInNotes" rows="3"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button type="button" class="btn btn-success" onclick="submitStockIn()">Stok Girişi Yap</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Stok Çıkış Modal -->
    <div class="modal fade" id="stockOutModal" tabindex="-1" aria-labelledby="stockOutModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="stockOutModalLabel">Stok Çıkışı</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="alert alert-info">
                        <i class="fas fa-info-circle"></i>
                        Mevcut Stok: <strong>@Model!.CurrentStock.ToString("N2") @Model!.UnitName</strong>
                    </div>
                    <form id="stockOutForm">
                        <div class="mb-3">
                            <label for="stockOutQuantity" class="form-label">Miktar</label>
                            <input type="number" class="form-control" id="stockOutQuantity" step="0.01" max="@Model!.CurrentStock" required>
                        </div>
                        <div class="mb-3">
                            <label for="stockOutPrice" class="form-label">Birim Fiyat</label>
                            <input type="number" class="form-control" id="stockOutPrice" step="0.01">
                        </div>
                        <div class="mb-3">
                            <label for="stockOutDocument" class="form-label">Belge No</label>
                            <input type="text" class="form-control" id="stockOutDocument">
                        </div>
                        <div class="mb-3">
                            <label for="stockOutNotes" class="form-label">Açıklama</label>
                            <textarea class="form-control" id="stockOutNotes" rows="3"></textarea>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button type="button" class="btn btn-danger" onclick="submitStockOut()">Stok Çıkışı Yap</button>
                </div>
            </div>
        </div>
    </div>

    <!-- Tüm Hareketler Modal -->
    <div class="modal fade" id="transactionsModal" tabindex="-1" aria-labelledby="transactionsModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="transactionsModalLabel">Tüm Stok Hareketleri</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div id="transactionsContent">
                        <div class="text-center">
                            <div class="spinner-border" role="status">
                                <span class="visually-hidden">Yükleniyor...</span>
                            </div>
                            <p class="mt-2">Hareketler yükleniyor...</p>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                    <a href="@Url.Action("Transactions")" class="btn btn-primary">Detaylı Sayfaya Git</a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function showStockInModal() {
    const modal = new bootstrap.Modal(document.getElementById('stockInModal'));
    modal.show();
}

function showStockOutModal() {
    const modal = new bootstrap.Modal(document.getElementById('stockOutModal'));
    modal.show();
}

function showTransactionsModal() {
    const modal = new bootstrap.Modal(document.getElementById('transactionsModal'));
    modal.show();
    
    // AJAX ile tüm hareketleri yükle
    fetch('@Url.Action("GetStockTransactions", "Stock")?stockCardId=@Model!.StockCardID')
        .then(response => response.json())
        .then(data => {
            let content = '';
            if (data.success && data.transactions.length > 0) {
                content = '<div class="table-responsive">';
                content += '<table class="table table-sm table-striped">';
                content += '<thead><tr><th>Tarih</th><th>Tür</th><th>Miktar</th><th>Birim Fiyat</th><th>Belge</th></tr></thead>';
                content += '<tbody>';
                
                data.transactions.forEach(function(transaction) {
                    const badgeClass = transaction.transactionType === 'IN' ? 'bg-success' : 'bg-danger';
                    content += '<tr>';
                    content += '<td>' + new Date(transaction.transactionDate).toLocaleDateString('tr-TR') + '</td>';
                    content += '<td><span class="badge ' + badgeClass + '">' + transaction.transactionType + '</span></td>';
                    content += '<td>' + transaction.quantity.toFixed(2) + '</td>';
                    content += '<td>' + transaction.unitPrice.toFixed(2) + ' ₺</td>';
                    content += '<td>' + (transaction.documentNumber || '-') + '</td>';
                    content += '</tr>';
                });
                
                content += '</tbody></table></div>';
            } else {
                content = '<div class="text-center text-muted">';
                content += '<i class="fas fa-inbox fa-3x mb-3"></i>';
                content += '<p>Henüz stok hareketi bulunmuyor.</p>';
                content += '</div>';
            }
            
            document.getElementById('transactionsContent').innerHTML = content;
        })
        .catch(error => {
            document.getElementById('transactionsContent').innerHTML = 
                '<div class="alert alert-danger"><i class="fas fa-exclamation-triangle"></i> Hareketler yüklenirken hata oluştu.</div>';
        });
}

function submitStockIn() {
    const quantity = document.getElementById('stockInQuantity').value;
    const price = document.getElementById('stockInPrice').value;
    const document = document.getElementById('stockInDocument').value;
    const notes = document.getElementById('stockInNotes').value;
    
    if (!quantity || quantity <= 0) {
        alert('Geçerli bir miktar giriniz.');
        return;
    }
    
    // AJAX ile stok girişi yapılacak
    fetch('@Url.Action("CreateStockTransaction", "Stock")', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
        },
        body: JSON.stringify({
            StockCardID: @Model!.StockCardID,
            TransactionType: 'IN',
            Quantity: parseFloat(quantity),
            UnitPrice: parseFloat(price) || 0,
            DocumentNumber: document,
            Notes: notes
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Stok girişi başarıyla tamamlandı.');
            location.reload();
        } else {
            alert('Hata: ' + data.message);
        }
    })
    .catch(error => {
        alert('Stok girişi sırasında hata oluştu.');
    });
}

function submitStockOut() {
    const quantity = document.getElementById('stockOutQuantity').value;
    const price = document.getElementById('stockOutPrice').value;
    const document = document.getElementById('stockOutDocument').value;
    const notes = document.getElementById('stockOutNotes').value;
    
    if (!quantity || quantity <= 0) {
        alert('Geçerli bir miktar giriniz.');
        return;
    }
    
    if (parseFloat(quantity) > @Model!.CurrentStock) {
        alert('Çıkış miktarı mevcut stoktan fazla olamaz.');
        return;
    }
    
    // AJAX ile stok çıkışı yapılacak
    fetch('@Url.Action("CreateStockTransaction", "Stock")', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
        },
        body: JSON.stringify({
            StockCardID: @Model!.StockCardID,
            TransactionType: 'OUT',
            Quantity: parseFloat(quantity),
            UnitPrice: parseFloat(price) || 0,
            DocumentNumber: document,
            Notes: notes
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            alert('Stok çıkışı başarıyla tamamlandı.');
            location.reload();
        } else {
            alert('Hata: ' + data.message);
        }
    })
    .catch(error => {
        alert('Stok çıkışı sırasında hata oluştu.');
    });
}

// Stock Chart
document.addEventListener('DOMContentLoaded', function() {
    const ctx = document.getElementById('stockChart').getContext('2d');
    
    new Chart(ctx, {
        type: 'doughnut',
        data: {
            labels: ['Mevcut Stok', 'Rezerve Stok', 'Kullanılabilir Alan'],
            datasets: [{
                data: [
                    @Model!.CurrentStock,
                    @Model!.ReservedStock,
                    Math.max(0, @Model!.MaximumStock - @Model!.CurrentStock)
                ],
                backgroundColor: [
                    '#28a745',
                    '#ffc107',
                    '#e9ecef'
                ]
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom'
                }
            }
        }
    });
});
</script>

<style>
.card.bg-light {
    border: 1px solid #dee2e6;
}

.badge {
    font-size: 0.9em;
}
</style> 
